{"version":3,"file":"static/js/452.418cec7e.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 40px;\n  color: rgb(44, 43, 43);\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  font-size: 2.4rem;\n`;\n\nexport const ContactStart = styled.p`\n  color: orangered;\n`;\n\nexport const ContactWrap = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n  }\n`;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  font-size: medium;\n  padding: 50px 40px;\n`;\n\nexport const FormInput = styled.input`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 8px;\n  font-size: medium;\n  text-align: left;\n  color: white;\n  background-color: orangered;\n  border: 1px solid black;\n  border-radius: 5px;\n  transition: border-color 250ms linear, color 250ms linear, background-color 250ms linear;\n  :hover,\n  :focus {\n    cursor: pointer;\n    border-color: orangered;\n    color: orangered;\n    background-color: white;\n  }\n  :-webkit-autofill {\n    transition: background-color 250s linear;\n  }\n  @media screen and (min-width: 480px) {\n    width: 300px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-self: center;\n  margin-top: 16px;\n  margin-bottom: 32px;\n  margin-left: 8px;\n  margin-right: 6px;\n  padding: 8px 16px;\n  font-size: medium;\n  line-height: 20px;\n  border: none;\n  border-radius: 5px;\n  color: white;\n  background-color: orangered;\n  border: 1px solid white;\n  cursor: pointer;\n  transition: border-color 250ms linear, color 250ms linear, background-color 250ms linear;\n  :hover {\n    border-color: orangered;\n    color: orangered;\n    background-color: white;\n  }\n`;\n\nexport const Contactabel = styled.label`\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n`;","import shortid from 'shortid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BsPersonPlusFill, BsFillTelephoneFill } from 'react-icons/bs';\nimport { toast } from 'react-toastify';\nimport { Form, FormInput, FormBtn, Contactabel } from './ContactForm.styled';\nimport { addContact } from '../../redux/contacts/contactsOperations';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const nameInputIdFirst = shortid.generate();\n  const nameInputIdSecond = shortid.generate();\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const obj = {\n      [e.target.elements.name.name]: e.target.elements.name.value,\n      [e.target.elements.number.name]: e.target.elements.number.value,\n    };\n\n    const includesName = contacts.find(contact => contact.name.toLowerCase() === e.target.elements.name.value.toLowerCase() && contact.number === e.target.elements.number.value);\n\n    if (includesName) {\n      toast.error(`\"${e.target.elements.name.value}\" with same number is already in contacts`);\n      e.target.reset();\n      return;\n    }\n\n    dispatch(addContact(obj));\n\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Contactabel htmlFor={nameInputIdFirst}>\n          <BsPersonPlusFill size={18} style={{ marginRight: '5px', marginLeft: '1px' }} />\n          Name\n        </Contactabel>\n        <FormInput\n          id={nameInputIdFirst}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Adrian Cross\"\n        />\n        <Contactabel htmlFor={nameInputIdSecond}>\n          {' '}\n          <BsFillTelephoneFill size={16} style={{ marginRight: '5px', marginLeft: '1px' }} />\n          Number\n        </Contactabel>\n        <FormInput\n          id={nameInputIdSecond}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"+38 077-777-77-77\"\n          minLength=\"10\"\n          maxLength=\"17\"\n        />\n        <FormBtn type=\"submit\">Add contact</FormBtn>\n      </Form>\n    </div>\n  );\n};","import styled from 'styled-components';\n\nexport const FilterWrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const FilterName = styled.input`\n  margin-bottom: 20px;\n  padding: 8px;\n  font-size: medium;\n  text-align: left;\n  color: white;\n  background-color: orangered;\n  border: 1px solid black;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: border-color 250ms linear, color 250ms linear, background-color 250ms linear;\n  :hover,\n  :focus {\n    border-color: orangered;\n    color: orangered;\n    background-color: white;\n  }\n  @media screen and (min-width: 480px) {\n    width: 300px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 200px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 400px;\n  }\n`;\n\nexport const FilterStyle = styled.label`\n  font-size: medium;\n  margin-bottom: 5px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport shortid from 'shortid';\nimport { BsSearch } from 'react-icons/bs';\nimport { FilterName, FilterStyle, FilterWrap } from './Filter.styled';\nimport { change } from '../../redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const nameInputIdThird = shortid.generate();\n  const filter = useSelector(state => state.filter.filter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(change(e.target.value));\n  };\n\n  return (\n    <FilterWrap>\n      <FilterStyle htmlFor={nameInputIdThird}>\n        <BsSearch size={18} style={{ marginRight: '5px', marginLeft: '1px' }} /> Find contacts by name\n      </FilterStyle>\n      <FilterName id={nameInputIdThird} type=\"text\" value={filter} onChange={changeFilter} />\n    </FilterWrap>\n  );\n};","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  margin: 0;\n  margin-top: 10px;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ContactsBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 36px;\n  width: 71px;\n  font-size: small;\n  border-radius: 5px;\n  color: white;\n  background-color: orangered;\n  border: 1px solid white;\n  cursor: pointer;\n  transition: border-color 250ms linear, color 250ms linear, background-color 250ms linear;\n  :hover {\n    border-color: orangered;\n    color: orangered;\n    background-color: white;\n  }\n`;\n\nexport const ContactsCallBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 36px;\n  width: 71px;\n  margin-left: 8px;\n  font-size: small;\n  border-radius: 5px;\n  color: white;\n  background-color: orangered;\n  border: 1px solid white;\n  cursor: pointer;\n  transition: border-color 250ms linear, color 250ms linear, background-color 250ms linear;\n  :hover {\n    border-color: orangered;\n    color: orangered;\n    background-color: white;\n  }\n`;\n\nexport const ContactsLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 34px;\n  width: 71px;\n  font-size: small;\n  border-radius: 5px;\n  color: white;\n  background-color: orangered;\n  border: 1px solid white;\n  text-decoration: none;\n  transition: border-color 250ms linear, color 250ms linear, background-color 250ms linear;\n  :hover {\n    border-color: orangered;\n    color: orangered;\n    background-color: white;\n  }\n`;\n\nexport const ContactsItem = styled.li`\n  align-items: center;\n  font-size: large;\n  justify-content: space-between;\n  @media screen and (min-width: 480px) {\n    display: flex;\n  }\n`;\n\nexport const ContactNotFound = styled.p`\n  color: rgba(209, 72, 17);\n  margin-top: 17px;\n`;\n\nexport const ContactsText = styled.p`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { BsFillTelephoneFill, BsPersonFill } from 'react-icons/bs';\nimport { ContactsList, ContactsBtn, ContactsItem, ContactsLink, ContactNotFound, ContactsText, Wrap, ContactsCallBtn } from './ContactList.styled';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter.filter);\n  const filteredContacts = contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n\n  const Callto = ({ phone, children }) => {\n    return <a href={`tel:${phone}`}>{children}</a>;\n  };\n\n  return (\n    <div>\n      {filteredContacts.length === 0 && contacts.length > 0 ? (\n        <ContactNotFound>Not found...</ContactNotFound>\n      ) : (\n        <ContactsList>\n          {filteredContacts.map(contact => (\n            <ContactsItem key={contact.id}>\n              <ContactsText>\n                {' '}\n                <BsPersonFill size={16} style={{ marginRight: '5px', marginLeft: '1px' }} />\n                {contact.name}: {contact.number}\n              </ContactsText>\n              <Wrap>\n                {' '}\n                <Callto phone={contact.number}>\n                  <ContactsCallBtn>\n                    <BsFillTelephoneFill size={16} style={{ marginRight: '5px', marginLeft: '1px' }} />\n                  </ContactsCallBtn>\n                </Callto>\n                <ContactsLink to={`/update/${contact.id}`} state={{ from: location }}>\n                  {' '}\n                  Edit\n                </ContactsLink>\n                <ContactsBtn onClick={() => dispatch(deleteContact(contact.id))}>Delete</ContactsBtn>\n              </Wrap>\n            </ContactsItem>\n          ))}\n        </ContactsList>\n      )}\n    </div>\n  );\n};","import { useSelector } from 'react-redux';\nimport { Container, ContactStart, ContactWrap } from './Contacts.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const contacts = useSelector(state => state.contacts.items);\n\n  return (\n    <Container>\n      <ContactForm />\n      <ContactWrap>\n        {' '}\n        {contacts.length > 0 ? <Filter /> : <ContactStart>You don't have any contacts yet</ContactStart>}\n        <ContactList />\n      </ContactWrap>\n    </Container>\n  );\n};\n\nexport default Contacts;","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["Container","styled","ContactStart","ContactWrap","Form","FormInput","FormBtn","Contactabel","ContactForm","contacts","useSelector","state","items","nameInputIdFirst","shortid","nameInputIdSecond","dispatch","useDispatch","onSubmit","e","preventDefault","obj","target","elements","name","value","number","find","contact","toLowerCase","toast","reset","addContact","htmlFor","size","style","marginRight","marginLeft","id","type","pattern","title","required","placeholder","minLength","maxLength","FilterWrap","FilterName","FilterStyle","Filter","nameInputIdThird","filter","onChange","change","ContactsList","ContactsBtn","ContactsCallBtn","ContactsLink","NavLink","ContactsItem","ContactNotFound","ContactsText","Wrap","ContactList","location","useLocation","filteredContacts","includes","Callto","phone","children","href","length","map","to","from","onClick","deleteContact","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","i","_seed_","mask","log","LN2","step"],"sourceRoot":""}